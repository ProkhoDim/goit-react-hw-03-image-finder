{"version":3,"sources":["component/Searchbar/Searchbar.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","services/apiServices.js","component/LoadButton/LoadButton.js","component/Modal/Modal.js","component/ImageInModal/ImageInModal.js","App.js","index.js"],"names":["Searchbar","state","message","handleChange","value","currentTarget","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","id","webformatURL","tags","onClick","src","alt","ImageGallery","imageList","onImageClick","map","key","axios","defaults","baseURL","page","perPage","queryString","get","then","response","data","hits","largeImageURL","LoadButton","onCLick","modalElement","document","querySelector","Modal","closeModal","code","onClose","onClickOverlay","target","window","addEventListener","removeEventListener","createPortal","children","ImageInModal","options","INIT_STATE","queryPage","App","searchMessage","isLoading","showModal","modalImageOptions","errorMessage","getImages","apiService","length","prevState","catch","err","console","log","finally","handleSearchSubmit","handleLoadMoreClick","scrollBy","top","documentElement","scrollHeight","behavior","getLargeImage","imageId","find","toggleModal","prevProps","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90ab2af1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Searchbar extends Component {\n  state = {\n    message: '',\n  };\n\n  handleChange = ({ currentTarget: { value } }) =>\n    this.setState({ message: value });\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state.message);\n  };\n\n  render() {\n    const { message } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={message}\n            onChange={this.handleChange}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from 'react';\n\nconst ImageGalleryItem = ({ id, webformatURL, tags, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => onClick(id)}\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({ imageList, onImageClick }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {imageList.map(({ id, webformatURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          webformatURL={webformatURL}\n          tags={tags}\n          id={id}\n          onClick={onImageClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import axios from 'axios';\n\nconst API_KEY = '15440827-454030fbfe14a611a1b7b063f';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nconst fetchImages = ({ page = 1, perPage = 20, queryString = '' }) => {\n  return axios\n    .get(`?key=${API_KEY}&q=${queryString}&page=${page}&per_page=${perPage}`)\n    .then(response => response.data.hits)\n    .then(data =>\n      data.map(({ id, webformatURL, largeImageURL, tags }) => ({\n        id,\n        webformatURL,\n        largeImageURL,\n        tags,\n      })),\n    );\n};\n\nexport default { fetchImages };\n","import React from 'react';\n\nconst LoadButton = ({ onCLick }) => {\n  return (\n    <div className=\"Button__wrap\">\n      <button type=\"button\" onClick={onCLick} className=\"Button\">\n        Load more...\n      </button>\n    </div>\n  );\n};\n\nexport default LoadButton;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalElement = document.querySelector('#modal');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keyup', this.closeModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keyup', this.closeModal);\n  }\n\n  closeModal = ({ code }) => {\n    if (code === 'Escape') {\n      this.props.onClose();\n      return;\n    }\n  };\n\n  onClickOverlay = ({ target: { className } }) => {\n    if (className === 'Overlay') {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.onClickOverlay}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalElement,\n    );\n  }\n}\n\nexport default Modal;\n","import React from 'react';\n\nconst ImageInModal = ({ options: { largeImageURL, tags } }) => {\n  return (\n    <>\n      <img src={largeImageURL} alt={tags} />\n    </>\n  );\n};\n\nexport default ImageInModal;\n","import React, { Component } from 'react';\nimport Searchbar from './component/Searchbar';\nimport ImageGallery from './component/ImageGallery';\nimport apiService from './services/apiServices';\nimport LoadButton from './component/LoadButton';\nimport Loader from 'react-loader-spinner';\nimport Modal from './component/Modal';\nimport ImageInModal from './component/ImageInModal';\n\nconst INIT_STATE = {\n  queryPage: 1,\n  imageList: [],\n};\n\nclass App extends Component {\n  state = {\n    ...INIT_STATE,\n    searchMessage: '',\n    isLoading: false,\n    showModal: false,\n    modalImageOptions: {},\n    errorMessage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchMessage !== this.state.searchMessage) this.getImages();\n  }\n\n  getImages = () => {\n    const { searchMessage, queryPage } = this.state;\n\n    this.setState({ isLoading: true, errorMessage: '' });\n\n    return apiService\n      .fetchImages({\n        queryString: searchMessage,\n        page: queryPage,\n      })\n      .then(data => {\n        data.length > 0\n          ? this.setState(prevState => {\n              return {\n                imageList: [...prevState.imageList, ...data],\n                queryPage: prevState.queryPage + 1,\n              };\n            })\n          : this.setState({\n              errorMessage: `Nothing's found. Change query and try again. Query: ${searchMessage}`,\n              isLoading: false,\n            });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleSearchSubmit = message => {\n    this.setState({ searchMessage: message, ...INIT_STATE });\n  };\n\n  handleLoadMoreClick = () => {\n    this.getImages().then(() => {\n      window.scrollBy({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    });\n  };\n\n  getLargeImage = imageId => {\n    this.setState(prevState => ({\n      modalImageOptions: {\n        ...prevState.imageList.find(({ id }) => id === imageId),\n      },\n    }));\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const {\n      imageList,\n      isLoading,\n      showModal,\n      errorMessage,\n      modalImageOptions,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <ImageInModal options={modalImageOptions} />\n          </Modal>\n        )}\n\n        <Searchbar onSubmit={this.handleSearchSubmit} />\n\n        <ImageGallery imageList={imageList} onImageClick={this.getLargeImage} />\n\n        {!isLoading && errorMessage && (\n          <h2>Nothing's found. Change query and try again</h2>\n        )}\n\n        {imageList.length > 0 && !isLoading && (\n          <LoadButton onCLick={this.handleLoadMoreClick} />\n        )}\n\n        {isLoading && (\n          <Loader\n            type=\"Circles\"\n            color=\"#3f51b5\"\n            height={80}\n            width={80}\n            className=\"Loader\"\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}